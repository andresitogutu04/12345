name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 20 * * 2'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7,3.8,3.9]
    env:
      REQUIRES_PYNBODY: false
      REQUIRES_ASTROPY: true
      REQUIRES_ASTROQUERY: true
      PYTHON_COVREPORTS_VERSION: 3.9      
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install lcov
      run: |
         wget http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
         tar xf lcov-1.14.tar.gz
         sudo make -C lcov-1.14/ install
    - name: Install the GSL
      run: |
         sudo apt-get install libgsl-dev
    - name: Install Python dependencies
      run: |
         pip install numpy scipy matplotlib numexpr setuptools cython pytest
    - name: Install pynbody
      if: ${{ $REQUIRES_PYNBODY }}
      run: |
         pip install h5py pandas pytz
         pip install git+git://github.com/pynbody/pynbody.git
    - name: Install astropy
      if: ${{ $REQUIRES_ASTROPY }}
      run: pip install astropy pyerfa
    - name: Install astroquery
      if: ${{ $REQUIRES_ASTROQUERY }}
      run: pip install astroquery
    - name: Install torus code # if [[ $TEST_FILES != 'tests/test_evolveddiskdf.py tests/test_jeans.py' ]]
      run: |
         git clone https://github.com/jobovy/Torus.git galpy/actionAngle/actionAngleTorus_c_ext/torus
         cd galpy/actionAngle/actionAngleTorus_c_ext/torus
         git checkout galpy
         cd -
    - name: Download dfcorrections
      run: |
         curl -O https://github.s3.amazonaws.com/downloads/jobovy/galpy/galpy-dfcorrections.tar.gz
         tar xvzf galpy-dfcorrections.tar.gz -C ./galpy/df/data/
    - name: Install package
      run: |
        python setup.py build_ext --coverage --single_ext --inplace
        python setup.py develop --single_ext
    - name: Print debug info
      run: |
         python -c "import numpy; print(numpy.__version__)"
         python -c "import scipy; print(scipy.__version__)"
         python -c "import matplotlib; print(matplotlib.__version__)"
         # - if $REQUIRES_ASTROPY; then python -c "import astropy; print(astropy.__version__)"; fi
         #- if $REQUIRES_ASTROQUERY; then python -c "import astroquery; print(astroquery.__version__)"; fi
         # - if $REQUIRES_PYNBODY; then python -c "import pynbody; print(pynbody.__version__)"; fi
    - name: Test with pytest
      run: |
        pip install 'coverage==4.1' --force-reinstall # necessary bc of backward incompatible change in 4.2 about combining reports
        pip install pytest-cov
        pytest -v tests/test_coords.py --cov galpy --cov-config .coveragerc_travis --disable-pytest-warnings
        #pytest -v $TEST_FILES --cov galpy --cov-config .coveragerc_travis --disable-pytest-warnings
#    - name: Generate code coverage
#      if: ${{ matrix.python-version == env.PYTHON_COVREPORTS_VERSION }} 
#      run: |
#        lcov --capture --base-directory . --directory build/temp.linux-x86_64-$PYTHON_COVREPORTS_VERSION/galpy/ --no-external --output-file coverage_full.info
#    - name: Upload coverage reports to codecov
#      if: ${{ matrix.python-version == env.PYTHON_COVREPORTS_VERSION }}
#      uses: codecov/codecov-action@v1
