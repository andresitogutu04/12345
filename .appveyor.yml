build: off

environment:
  PYTHON_VERSION: 3.8
  MINICONDA: C:\\Miniconda37-x64

  matrix:
    - TEST_FILES: tests\test_orbit.py tests\test_orbits.py
      ADDL_CONDA_PKGS: astropy astroquery
      COMPILE_NOOPENMP: 
      BUILD_WHEELS: "true"

    - TEST_FILES: "tests\\ --ignore=tests\\test_actionAngleTorus.py --ignore=tests\\test_snapshotpotential.py --ignore=tests\\test_qdf.py --ignore=tests\\test_pv2qdf.py --ignore=tests\\test_diskdf.py --ignore=tests\\test_orbit.py --ignore=tests\\test_orbits.py --ignore=tests\\test_streamdf.py --ignore=tests\\test_streamgapdf.py --ignore=tests\\test_evolveddiskdf.py --ignore=tests\\test_quantity.py --ignore=tests\\test_nemo.py --ignore=tests\\test_amuse.py --ignore=tests\\test_coords.py"
      ADDL_CONDA_PKGS: 
      COMPILE_NOOPENMP: 
      BUILD_WHEELS: "false"

    - TEST_FILES: tests\test_quantity.py tests\test_coords.py
      ADDL_CONDA_PKGS: astropy
      COMPILE_NOOPENMP: "--no-openmp"
      BUILD_WHEELS: "false"

platform:
    - x64

install:
  - cmd: call %MINICONDA%\Scripts\activate.bat
  - cmd: conda.exe update --yes --quiet conda
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda info -a
  - conda config --append channels astropy 
  - "conda create -n test-environment python=%PYTHON_VERSION% numpy scipy matplotlib numexpr setuptools pip cython>=0.20 pytest gsl %ADDL_CONDA_PKGS%"
  - activate test-environment
  - pip install coverage
  - pip install pytest-cov

  # Environment variables for GSL linking
  - set INCLUDE=%CONDA_PREFIX%\Library\include;%INCLUDE%
  - set LIB=%CONDA_PREFIX%\Library\lib;%LIB%
  - set LIBPATH=%CONDA_PREFIX%\Library\lib;%LIBPATH%

  - "python setup.py build_ext --single_ext --inplace %COMPILE_NOOPENMP%"
  - python setup.py develop --single_ext

test_script:
  - pytest -v %TEST_FILES% --cov galpy --cov-config .coveragerc_travis --disable-pytest-warnings

after_test:
  # Build wheels for different python versions of BUILD_WHEELS, otherwise done
  - ps: |
      if ($env:BUILD_WHEELS -eq "false") {
        Exit-AppVeyorBuild
      }
  - conda deactivate
  - conda remove --name test-environment --all
  # Python 3.8
  - conda create -n py38 python=3.8 numpy scipy matplotlib setuptools pip pytest gsl
  - conda activate py38
  - pip install wheel
  - set INCLUDE=%CONDA_PREFIX%\Library\include;%INCLUDE%
  - set LIB=%CONDA_PREFIX%\Library\lib;%LIB%
  - set LIBPATH=%CONDA_PREFIX%\Library\lib;%LIBPATH%
  - python setup.py bdist_wheel
  - conda deactivate
  # Python 3.7
  - conda create -n py37 python=3.7 numpy scipy matplotlib setuptools pip pytest gsl
  - conda activate py37
  - conda remove --name py38 --all
  - pip install wheel
  - set INCLUDE=%CONDA_PREFIX%\Library\include;%INCLUDE%
  - set LIB=%CONDA_PREFIX%\Library\lib;%LIB%
  - set LIBPATH=%CONDA_PREFIX%\Library\lib;%LIBPATH%
  - python setup.py bdist_wheel
  - conda deactivate
  # Python 3.6
  - conda create -n py36 python=3.6 numpy scipy matplotlib setuptools pip pytest gsl
  - conda activate py36
  - conda remove --name py37 --all
  - pip install wheel
  - set INCLUDE=%CONDA_PREFIX%\Library\include;%INCLUDE%
  - set LIB=%CONDA_PREFIX%\Library\lib;%LIB%
  - set LIBPATH=%CONDA_PREFIX%\Library\lib;%LIBPATH%
  - python setup.py bdist_wheel
  - conda deactivate
  # Upload as artifacts
  - ps: |
      if ($env:BUILD_WHEELS -eq "true") {
        Get-ChildItem dist\*.whl | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
      }